#ifndef 
#define 

#include "DataTypes.h"

//This should go in its own file
void ChipFunctions_HwSetup(void);

//The ATtiny861 defaults to 8MHz CPU clock with a prescal factor of 8.
typedef enum
{
  CF_CPU_PRESCALE_FACTOR_1   = 0b0000,
  CF_CPU_PRESCALE_FACTOR_8   = 0b0011,  //Factory default
  CF_CPU_PRESCALE_FACTOR_128 = 0b0111,
  CF_CPU_PRESCALE_FACTOR_256 = 0b1000
} Cf_CpuPrescaleFactor;
#define BITMASK_CF_PRESCALE_FACTOR ((1<<CLKPS3) | (1<<CLKPS2) | (1<<CLKPS1) | (1<<CLKPS0))
void ChipFunctions_SetCpuPrescaler(Cf_CpuPrescaleFactor);


Setup()
{
  CLKPR = 0b0011;
}


  BYTES_EQUAL(0b0011, CLKPR);


TEST(ChipFunctions, HardwareSetup)
{
  uint8_t expectedCLKPR = 0;
  SET_BITMASK_TO(expectedCLKPR, CF_CPU_PRESCALE_FACTOR_1, BITMASK_CF_PRESCALE_FACTOR);
  ChipFunctions_HwSetup();
  BYTES_EQUAL(expectedCLKPR, CLKPR);
}

TEST(ChipFunctions, SetAllCpuPrescaleFactorBits)
{
  //0x0f isn't a valid prescaler value, so test all bits in two steps
  ChipFunctions_SetCpuPrescaler(CF_CPU_PRESCALE_FACTOR_256);
  BYTES_EQUAL(0x08, CLKPR);
  ChipFunctions_SetCpuPrescaler(CF_CPU_PRESCALE_FACTOR_128);
  BYTES_EQUAL(0x07, CLKPR);
}

TEST(ChipFunctions, ClearAllCpuPrescaleFactorBits)
{
  CLKPR = 0xff;
  ChipFunctions_SetCpuPrescaler(CF_CPU_PRESCALE_FACTOR_1);
  BYTES_EQUAL(0xf0, CLKPR);
}




void ChipFunctions_HwSetup(void)
{
  ChipFunctions_SetCpuPrescaler(CF_CPU_PRESCALE_FACTOR_1);
}

void ChipFunctions_SetCpuPrescaler(Cf_CpuPrescaleFactor prescaleFactor)
{
  SHIFT_AND_SET_BITMASK_TO(CLKPR, prescaleFactor, BITMASK_CF_PRESCALE_FACTOR);
}
